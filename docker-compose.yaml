services:
  aerospike-db:
    image: aerospike/aerospike-server-enterprise:8.0.0.7
    container_name: aerospike-db
    networks:
      - asgraph_net
    ports:
      - "3000-3002:3000-3002"
    environment:
      - DEFAULT_TTL=0
    healthcheck:
      test: ["CMD", "asinfo", "-p", "3000", "-v", "build"]
      interval: 5s
      timeout: 20s
      retries: 4
  aerospike-graph-service:
    image: aerospike/aerospike-graph-service:3.0.0
    container_name: asgraph-service
    depends_on:
      aerospike-db:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    ports:
      - "8182:8182"
      - "9090:9090"
    environment:
      - aerospike.client.namespace=test
      - aerospike.client.host=aerospike-db
      - aerospike.graph.index.vertex.label.enabled=true
      - aerospike.graph.query-tracing.threshold-ms=5
      - aerospike.graph.query-tracing.opentelemetry-host=zipkin
    volumes:
      - ./data:/data
    networks:
      - asgraph_net
  zipkin:
    image: openzipkin/zipkin
    container_name: asgraph-zipkin
    networks:
      - asgraph_net
    ports:
      - "9411:9411"
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: "asgraph-backend"
    environment:
      GRAPH_HOST_ADDRESS: "asgraph-service"
    depends_on:
      - aerospike-db
      - aerospike-graph-service
    networks:
      - asgraph_net
    ports:
      - "4000:4000"
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: "asgraph-frontend"
    environment:
      PUBLIC_URL: "http://localhost:8080"
    depends_on:
      - backend
    networks:
      - asgraph_net
    ports:
      - "4001:4001"
  caddy:
    image: caddy
    container_name: asgraph-caddy
    depends_on:
      - backend
      - frontend
      - zipkin
    volumes:
      - ./conf:/etc/caddy
    networks:
      - asgraph_net
    ports:
      - "8080:8080"
networks:
  asgraph_net:
    name: asgraph_net
