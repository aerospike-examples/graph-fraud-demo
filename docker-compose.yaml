services:
  aerospike-db:
    image: aerospike/aerospike-server-enterprise:8.0.0.7
    container_name: aerospike-db
    command: --config-file /opt/aerospike/etc/aerospike.conf
    volumes:
      - ./conf:/opt/aerospike/etc
    healthcheck:
      test: ["CMD", "asinfo", "-p", "3000", "-v", "build"]
      interval: 5s
      timeout: 20s
      retries: 4
    networks:
      - asgraph_net
    ports:
      - "3000-3002:3000-3002"
  aerospike-graph-service:
    image: aerospike/aerospike-graph-service:3.0.0
    container_name: asgraph-service
    depends_on:
      aerospike-db:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    volumes:
      - ./data:/data
    environment:
      - aerospike.client.namespace=data
      - aerospike.client.host=aerospike-db
      - aerospike.graph.index.vertex.label.enabled=true
      - aerospike.graph.query-tracing.threshold-ms=5
      - aerospike.graph.query-tracing.opentelemetry-host=zipkin
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/healthcheck"]
      interval: 5s
      timeout: 10s
      retries: 4
    networks:
      - asgraph_net
    ports:
      - "8182:8182"
      - "9090:9090"
  zipkin:
    image: openzipkin/zipkin
    container_name: asgraph-zipkin
    networks:
      - asgraph_net
    ports:
      - "9411:9411"
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: "asgraph-backend"
    depends_on:
      aerospike-db:
        condition: service_healthy
      aerospike-graph-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://0.0.0.0:4000/health"]
      interval: 5s
      timeout: 10s
      retries: 4
    networks:
      - asgraph_net
    ports:
      - "4000:4000"
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: "asgraph-frontend"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - asgraph_net
    ports:
      - "8080:8080"
networks:
  asgraph_net:
    name: asgraph_net
